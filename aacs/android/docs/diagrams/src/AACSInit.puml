@startuml
skinparam roundcorner 10
participant Driver 
participant App
participant AACS
participant Alexa 
==First Launch (Provide config)==
Driver->App: Turn on Alexa in settings
App->AACS: startForegroundService(Intent) intent with \nNEW_CONFIG = true
|||
rnote over AACS: Start as foreground \nservice
rnote over AACS: Wait for configuration
|||
App->AACS: Send Intent.ACTION_SEND_MULTIPLE intent \n containing URIs of files to be shared \n(if necessary)
|||
rnote over AACS: Creates local copy of files \nto be used when configuring
|||
App->AACS: AACSSender.sendConfigMessageAnySize(\nString, TargetComponent, Context)
|||
rnote over AACS: Store configuration in \nSharedPreferences
|||
AACS->Alexa: Engine.configure(EngineConfiguration[]) \n& Engine.start()
Alexa-->AACS: Return true if successful
AACS-->App: AASB:StartService message indicating start
App-->Driver: Provide Alexa functionality
==Second Launch (No config update)==
Driver->App: Turn on Alexa in settings
App->AACS: startForegroundService(Intent) intent with \nNEW_CONFIG = false
|||
rnote over AACS: Start as foreground \nservice
rnote over AACS: Retrieve configuration from \nSharedPreferences
|||
AACS->Alexa: Engine.configure(EngineConfiguration[]) \n& Engine.start()
Alexa-->AACS: Return true if successful
AACS-->App: AASB:StartService message indicating start
App-->Driver: Provide Alexa functionality
==Launch on DeviceBoot==
Driver->AACS: Start car
AACS->AACS: startForegroundService(Intent) when \nBOOT_COMPLETED intent received \nfrom device
|||
rnote over AACS: Start as foreground \nservice
rnote over AACS: Retrieve configuration from \nSharedPreferences
|||
AACS->Alexa: Engine.configure(EngineConfiguration[]) \n& Engine.start()
Alexa-->AACS:Return true if successful
AACS-->App: AASB:StartService message indicating start
App-->Driver: Provide Alexa functionality
@enduml