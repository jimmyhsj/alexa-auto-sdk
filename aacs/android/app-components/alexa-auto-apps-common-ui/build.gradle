apply plugin: 'com.android.library'
android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 26
        versionCode 1
        versionName "4.1.1"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            debuggable true
        }
    }
    sourceSets {
        main {
            def restrictedAssets = new File(gradle.ext.aacsRoot, "restrictedAssets")
            if (restrictedAssets.exists()) {
                project.logger.lifecycle("Building alexa-auto-apps-common-ui using Alexa assets..")
                res.srcDirs = ['src/main/res', restrictedAssets.getCanonicalPath()]
            } else {
                project.logger.lifecycle("Building alexa-auto-apps-common-ui using placeholders..")
                res.srcDirs = ['src/main/res', 'src/main/res-placeholders']
            }
        }
    }

    testOptions {
        // Unit Test: Make all android methods return true by default
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    libraryVariants.all { variant ->
        variant.outputs.all {
            def project = "alexa-auto-apps-common-ui"
            def separator = "_"
            def buildType = variant.buildType.name
            def apkName = project + separator + buildType + ".aar"
            outputFileName = new File(apkName)
        }
    }

}

dependencies {
    implementation project(':alexa-auto-apps-common-util')
    implementation deps.androidx_appcompat
    implementation deps.androidx_constraint
    implementation deps.eventbus
    implementation deps.androidx_recycler_view

    testImplementation deps.junit
    testImplementation deps.mockito
    testImplementation deps.roboelectric
}
